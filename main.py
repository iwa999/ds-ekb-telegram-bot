#!/usr/bin/env python3
"""
DS EKB Telegram Bot - –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞
–ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å amoCRM –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π
"""

import asyncio
import logging
from telegram.ext import Application, CommandHandler, MessageHandler, filters
from config import Config
from handlers import BotHandlers
from utils import setup_logging

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    setup_logging()
    logger = logging.getLogger(__name__)
    
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        application = Application.builder().token(Config.TELEGRAM_TOKEN).build()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        handlers = BotHandlers()
        
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥
        application.add_handler(CommandHandler("start", handlers.start_command))
        application.add_handler(CommandHandler("help", handlers.help_command))
        application.add_handler(CommandHandler("status", handlers.status_command))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        application.add_handler(MessageHandler(
            filters.TEXT & ~filters.COMMAND, 
            handlers.handle_message
        ))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ
        application.add_handler(MessageHandler(
            filters.PHOTO, 
            handlers.handle_photo
        ))
        
        logger.info("üöÄ DS EKB Bot –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        logger.info(f"üìã –ú–æ–¥—É–ª–µ–π –∑–∞–≥—Ä—É–∂–µ–Ω–æ: 5")
        logger.info(f"üîó amoCRM –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: –≤–∫–ª—é—á–µ–Ω–∞")
        
        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
        await application.run_polling(
            drop_pending_updates=True,
            allowed_updates=['message', 'callback_query']
        )
        
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")
        raise

if __name__ == "__main__":
    asyncio.run(main())
