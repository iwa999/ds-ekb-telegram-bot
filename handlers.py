"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π Telegram –±–æ—Ç–∞
–í—Å—è –ª–æ–≥–∏–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
"""

import asyncio
import logging
import re
from typing import Optional, Dict
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from config import Config
from amocrm import process_user_request
from utils import extract_user_data, format_message

logger = logging.getLogger(__name__)

class BotHandlers:
    """–ö–ª–∞—Å—Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞"""
    
    def __init__(self):
        self.config = Config()
        self.processing_users = set()  # –î–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞—è–≤–æ–∫

    async def start_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        try:
            keyboard = [
                [InlineKeyboardButton("üîß AI-–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞", callback_data="ai_diagnostics")],
                [InlineKeyboardButton("üìã –ó–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É", callback_data="order_service")],
                [InlineKeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contacts")],
                [InlineKeyboardButton("‚ùì FAQ", callback_data="faq")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            await update.message.reply_text(
                self.config.WELCOME_MESSAGE,
                reply_markup=reply_markup
            )
            
            logger.info(f"üë§ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {update.effective_user.id}")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ start_command: {e}")
            await self._send_error_message(update)

    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        help_text = (
            "üîß **–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –î–° –ï–ö–ë:**\n\n"
            "1Ô∏è‚É£ –û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ\n"
            "2Ô∏è‚É£ –£–∫–∞–∂–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ\n"
            "3Ô∏è‚É£ –ü–æ–ª—É—á–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞—è–≤–∫–∏\n"
            "4Ô∏è‚É£ –û–∂–∏–¥–∞–π—Ç–µ –∑–≤–æ–Ω–∫–∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞\n\n"
            "üìû **–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è —Å–≤—è–∑—å:** +7 922 130-83-65\n"
            "üïê **–†–∞–±–æ—á–∏–µ —á–∞—Å—ã:** 8:00-20:00\n\n"
            "üí° **–ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:**\n"
            "‚Ä¢ '–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä –Ω–µ –æ—Ö–ª–∞–∂–¥–∞–µ—Ç'\n"
            "‚Ä¢ '–ù—É–∂–Ω–∞ —á–∏—Å—Ç–∫–∞ –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏ –≤ –æ—Ñ–∏—Å–µ'\n"
            "‚Ä¢ '–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ –≤ –º–∞–≥–∞–∑–∏–Ω–µ'"
        )
        
        await update.message.reply_text(help_text, parse_mode='Markdown')

    async def status_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /status"""
        status_text = (
            "üìä **–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã –î–° –ï–ö–ë:**\n\n"
            "ü§ñ –ë–æ—Ç: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç\n"
            "üîó amoCRM: ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ\n"
            "üìû –ö–æ–ª–ª-—Ü–µ–Ω—Ç—Ä: ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω\n\n"
            "‚è±Ô∏è –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: 15 –º–∏–Ω—É—Ç\n"
            "üë• –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –Ω–∞ –ª–∏–Ω–∏–∏: 3\n\n"
            "–í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç —à—Ç–∞—Ç–Ω–æ!"
        )
        
        await update.message.reply_text(status_text, parse_mode='Markdown')

    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        user_id = update.effective_user.id
        
        # –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        if user_id in self.processing_users:
            await update.message.reply_text(
                "‚è≥ –í–∞—à–∞ –ø—Ä–µ–¥—ã–¥—É—â–∞—è –∑–∞—è–≤–∫–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è...\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ."
            )
            return
        
        try:
            self.processing_users.add(user_id)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è
            processing_msg = await update.message.reply_text(
                "üì® –ó–∞—è–≤–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞!\n‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º..."
            )
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_data = extract_user_data(update)
            
            # –õ–æ–≥–∏—Ä—É–µ–º –∑–∞—è–≤–∫—É
            logger.info(f"üìã –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç {user_id}: {user_data['message'][:50]}...")
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞—è–≤–∫—É –≤ amoCRM
            success, response_message, deal_number = await process_user_request(user_data)
            
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º"
            try:
                await processing_msg.delete()
            except:
                pass
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            if success:
                await update.message.reply_text(
                    response_message,
                    reply_markup=self._get_main_menu_keyboard()
                )
                logger.info(f"‚úÖ –ó–∞—è–≤–∫–∞ {deal_number} —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            else:
                await update.message.reply_text(response_message)
                logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
            await asyncio.sleep(2)
            await update.message.reply_text(
                "üí¨ –ú–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–ª–∏ —Ñ–æ—Ç–æ –ø—Ä–æ–±–ª–µ–º—ã"
            )
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç {user_id}: {e}")
            await self._send_error_message(update)
        finally:
            self.processing_users.discard(user_id)

    async def handle_photo(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ç–æ
            photo = update.message.photo[-1]  # –ë–µ—Ä–µ–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
            file_id = photo.file_id
            
            caption = update.message.caption or "–§–æ—Ç–æ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞"
            
            await update.message.reply_text(
                "üì∏ –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ!\n"
                "–ü–µ—Ä–µ–¥–∞–¥–∏–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.\n\n"
                "üí¨ –ú–æ–∂–µ—Ç–µ —Ç–∞–∫–∂–µ –æ–ø–∏—Å–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—É —Ç–µ–∫—Å—Ç–æ–º"
            )
            
            # –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ç–æ
            user_id = update.effective_user.id
            logger.info(f"üì∏ –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {file_id}")
            
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ –≤ amoCRM –∏–ª–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ: {e}")
            await self._send_error_message(update)

    async def handle_callback(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç –∫–Ω–æ–ø–æ–∫"""
        query = update.callback_query
        await query.answer()
        
        try:
            data = query.data
            
            if data == "ai_diagnostics":
                await query.edit_message_text(
                    "üîç **AI-–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ HVAC –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è**\n\n"
                    "–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ:\n"
                    "‚Ä¢ –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç?\n"
                    "‚Ä¢ –ö–æ–≥–¥–∞ –Ω–∞—á–∞–ª–∞—Å—å –ø—Ä–æ–±–ª–µ–º–∞?\n"
                    "‚Ä¢ –ö–∞–∫–∏–µ –∑–≤—É–∫–∏/–∑–∞–ø–∞—Ö–∏ –µ—Å—Ç—å?\n"
                    "‚Ä¢ –ú–æ–¥–µ–ª—å –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è (–µ—Å–ª–∏ –∑–Ω–∞–µ—Ç–µ)\n\n"
                    "–ò–ò –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏ –¥–∞—Å—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏!",
                    parse_mode='Markdown'
                )
                
            elif data == "order_service":
                await query.edit_message_text(
                    "üìã **–ó–∞–∫–∞–∑ —É—Å–ª—É–≥–∏**\n\n"
                    "–ù–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:\n"
                    "‚Ä¢ –†–µ–º–æ–Ω—Ç –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–∞\n"
                    "‚Ä¢ –ß–∏—Å—Ç–∫–∞ –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏\n"
                    "‚Ä¢ –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞\n\n"
                    "–£–∫–∞–∂–∏—Ç–µ —Ç–∞–∫–∂–µ:\n"
                    "‚Ä¢ –í–∞—à –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω\n"
                    "‚Ä¢ –ê–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞\n"
                    "‚Ä¢ –£–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è",
                    parse_mode='Markdown'
                )
                
            elif data == "contacts":
                await query.edit_message_text(
                    f"üìû **–ö–æ–Ω—Ç–∞–∫—Ç—ã –î–° –ï–ö–ë**\n\n"
                    f"‚òéÔ∏è –¢–µ–ª–µ—Ñ–æ–Ω: {self.config.COMPANY_PHONE}\n"
                    f"üïê –†–∞–±–æ—á–∏–µ —á–∞—Å—ã: 8:00-20:00\n"
                    f"üìß Email: info@ds-ekb.ru\n"
                    f"üìç –ê–¥—Ä–µ—Å: –≥. –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥\n\n"
                    f"üí¨ Telegram: {self.config.BOT_USERNAME}\n\n"
                    f"–†–∞–±–æ—Ç–∞–µ–º –±–µ–∑ –≤—ã—Ö–æ–¥–Ω—ã—Ö!",
                    parse_mode='Markdown'
                )
                
            elif data == "faq":
                await query.edit_message_text(
                    "‚ùì **–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã**\n\n"
                    "**–ö–∞–∫ –±—ã—Å—Ç—Ä–æ –ø—Ä–∏–µ–¥–µ—Ç –º–∞—Å—Ç–µ—Ä?**\n"
                    "–í —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –∑–∞—è–≤–∫–∏\n\n"
                    "**–†–∞–±–æ—Ç–∞–µ—Ç–µ –ª–∏ –≤ –≤—ã—Ö–æ–¥–Ω—ã–µ?**\n"
                    "–î–∞, —Ä–∞–±–æ—Ç–∞–µ–º 7 –¥–Ω–µ–π –≤ –Ω–µ–¥–µ–ª—é\n\n"
                    "**–ï—Å—Ç—å –ª–∏ –≥–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ —Ä–∞–±–æ—Ç—ã?**\n"
                    "–î–∞, 6 –º–µ—Å—è—Ü–µ–≤ –Ω–∞ –≤—Å–µ –≤–∏–¥—ã —Ä–∞–±–æ—Ç\n\n"
                    "**–ü—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –ª–∏ –±–µ–∑–Ω–∞–ª–∏—á–Ω—ã–π —Ä–∞—Å—á–µ—Ç?**\n"
                    "–î–∞, –ø—Ä–∏–Ω–∏–º–∞–µ–º –∫–∞—Ä—Ç—ã –∏ –ø–µ—Ä–µ–≤–æ–¥—ã",
                    parse_mode='Markdown',
                    reply_markup=self._get_main_menu_keyboard()
                )
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback: {e}")

    def _get_main_menu_keyboard(self) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
        keyboard = [
            [InlineKeyboardButton("üîß AI-–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞", callback_data="ai_diagnostics")],
            [InlineKeyboardButton("üìã –ó–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É", callback_data="order_service")],
            [InlineKeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contacts")],
            [InlineKeyboardButton("‚ùì FAQ", callback_data="faq")]
        ]
        return InlineKeyboardMarkup(keyboard)

    async def _send_error_message(self, update: Update) -> None:
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ"""
        try:
            await update.message.reply_text(self.config.ERROR_MESSAGE)
        except:
            logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ")
